from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton
from typing import List, Dict

# –¶–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –º–µ–Ω—é
MENU_ITEMS: List[Dict[str, str]] = [
    {"id": "fb_employee", "title": "üìã –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å –ø–æ–¥—á–∏–Ω–µ–Ω–Ω–æ–º—É"},
    {"id": "fb_peer", "title": "üë• –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å –∫–æ–ª–ª–µ–≥–µ"},
    {"id": "career_dialog", "title": "üöÄ –ö–∞—Ä—å–µ—Ä–Ω—ã–π –¥–∏–∞–ª–æ–≥"},
]

BACK_TO_MENU_TITLE: str = "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
CALLBACK_PREFIX_MENU: str = "menu:"
CALLBACK_NAV_MENU: str = "nav:menu"
CALLBACK_NAV_RATE: str = "nav:rate"
CALLBACK_NAV_HELP: str = "nav:help"
CALLBACK_NAV_FAQ: str = "nav:faq"

# –£–ø—Ä–∞–≤–ª–µ–Ω–∏—è, —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –¥–ª—è –∫–µ–π—Å–æ–≤
CALLBACK_CASE_PREFIX: str = "case:"
CALLBACK_CASE_RESTART_TEMPLATE: str = CALLBACK_CASE_PREFIX + "{case_id}:restart"
CALLBACK_CASE_REVIEW_TEMPLATE: str = CALLBACK_CASE_PREFIX + "{case_id}:review"

# –î–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –∫–æ–¥–æ–º
CALLBACK_CASE_RESTART: str = "case:fb_employee:restart"
CALLBACK_CASE_REVIEW: str = "case:fb_employee:review"

# Case action callbacks
CALLBACK_CASE_START: str = "start_dialog"
CALLBACK_CASE_THEORY: str = "theory"

# Reply keyboard button texts
KB_CASE_RESTART: str = "üîÑ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ"
KB_CASE_REVIEW: str = "üìä –ü–æ–ª—É—á–∏—Ç—å –∞–Ω–∞–ª–∏–∑"
KB_BACK_TO_MENU: str = "üè† –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"


# –£—Å—Ç–∞—Ä–µ–≤—à–∏–µ –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ ReplyKeyboard —É–¥–∞–ª–µ–Ω—ã; –æ—Å—Ç–∞—ë—Ç—Å—è —Ç–æ–ª—å–∫–æ inline UI


def get_main_menu_inline() -> InlineKeyboardMarkup:
    # –û—Å–Ω–æ–≤–Ω—ã–µ –∫–µ–π—Å—ã
    rows = [
        [InlineKeyboardButton(text=item["title"], callback_data=f"{CALLBACK_PREFIX_MENU}{item['id']}")]
        for item in MENU_ITEMS
    ]
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –ø–æ–º–æ—â–∏
    help_row = [
        InlineKeyboardButton(text="‚ùì FAQ", callback_data=CALLBACK_NAV_FAQ),
        InlineKeyboardButton(text="‚≠ê –û—Ü–µ–Ω–∏—Ç—å –±–æ—Ç–∞", callback_data=CALLBACK_NAV_RATE),
    ]
    rows.append(help_row)
    
    return InlineKeyboardMarkup(inline_keyboard=rows)


def get_back_menu_inline() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(
        inline_keyboard=[[InlineKeyboardButton(text=BACK_TO_MENU_TITLE, callback_data=CALLBACK_NAV_MENU)]]
    )


def get_case_controls_inline() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text="üîÑ –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â–µ —Ä–∞–∑", callback_data=CALLBACK_CASE_RESTART),
                InlineKeyboardButton(text="üìä –ü–æ–ª—É—á–∏—Ç—å –∞–Ω–∞–ª–∏–∑", callback_data=CALLBACK_CASE_REVIEW),
            ],
            [InlineKeyboardButton(text=BACK_TO_MENU_TITLE, callback_data=CALLBACK_NAV_MENU)],
        ]
    )


def get_case_controls_reply() -> ReplyKeyboardMarkup:
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text=KB_CASE_RESTART), KeyboardButton(text=KB_CASE_REVIEW)],
            [KeyboardButton(text=KB_BACK_TO_MENU)]
        ],
        resize_keyboard=True,
        one_time_keyboard=False,
        is_persistent=True,
        input_field_placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ...",
    )


def get_case_after_review_inline() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="üîÑ –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â–µ —Ä–∞–∑", callback_data=CALLBACK_CASE_RESTART)],
            [InlineKeyboardButton(text=BACK_TO_MENU_TITLE, callback_data=CALLBACK_NAV_MENU)],
        ]
    )


def get_case_after_review_inline_by_case(case_id: str) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø–æ—Å–ª–µ —Ä–µ—Ü–µ–Ω–∑–∏–∏ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º callback –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∫–µ–π—Å–∞."""
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(
                text="üîÑ –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â–µ —Ä–∞–∑", 
                callback_data=CALLBACK_CASE_RESTART_TEMPLATE.format(case_id=case_id)
            )],
            [InlineKeyboardButton(text=BACK_TO_MENU_TITLE, callback_data=CALLBACK_NAV_MENU)],
        ]
    )


def get_case_controls_inline_by_case(case_id: str) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º callback –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∫–µ–π—Å–∞."""
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="üîÑ –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â–µ —Ä–∞–∑", 
                    callback_data=CALLBACK_CASE_RESTART_TEMPLATE.format(case_id=case_id)
                ),
                InlineKeyboardButton(
                    text="üìä –ü–æ–ª—É—á–∏—Ç—å –∞–Ω–∞–ª–∏–∑", 
                    callback_data=CALLBACK_CASE_REVIEW_TEMPLATE.format(case_id=case_id)
                ),
            ],
            [InlineKeyboardButton(text=BACK_TO_MENU_TITLE, callback_data=CALLBACK_NAV_MENU)],
        ]
    )


def get_case_description_inline(case_id: str) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –æ–ø–∏—Å–∞–Ω–∏—è –∫–µ–π—Å–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–µ–π—Å—Ç–≤–∏–π."""
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="üé¨ –ù–∞—á–∞—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É", callback_data=f"case:{case_id}:start")],
            [InlineKeyboardButton(text="üìö –ò–∑—É—á–∏—Ç—å —Ç–µ–æ—Ä–∏—é", callback_data=f"case:{case_id}:theory")],
            [InlineKeyboardButton(text=BACK_TO_MENU_TITLE, callback_data=CALLBACK_NAV_MENU)],
        ]
    )


def get_disabled_buttons_markup() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –æ—Ç–∫–ª—é—á–µ–Ω–Ω—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏ (–ø—É—Å—Ç—É—é)."""
    return InlineKeyboardMarkup(inline_keyboard=[])


async def disable_previous_buttons(message, bot=None):
    """–û—Ç–∫–ª—é—á–∞–µ—Ç –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏, –∑–∞–º–µ–Ω—è—è –∏—Ö –Ω–∞ –ø—É—Å—Ç—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É."""
    if not message:
        return
    
    try:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º bot –∏–∑ message –µ—Å–ª–∏ –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω –æ—Ç–¥–µ–ª—å–Ω–æ
        if bot is None:
            bot = message.bot
            
        await bot.edit_message_reply_markup(
            chat_id=message.chat.id,
            message_id=message.message_id,
            reply_markup=get_disabled_buttons_markup()
        )
    except Exception:
        # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ (—Å–æ–æ–±—â–µ–Ω–∏–µ –º–æ–≥–ª–æ –±—ã—Ç—å —É–∂–µ –∏–∑–º–µ–Ω–µ–Ω–æ –∏–ª–∏ —É–¥–∞–ª–µ–Ω–æ)
        pass


async def remove_reply_keyboard(message):
    """–°–∫—Ä—ã–≤–∞–µ—Ç reply-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É, –Ω–µ –æ—Å—Ç–∞–≤–ª—è—è –≤–∏–¥–∏–º—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —á–∞—Ç–µ."""
    from aiogram.types import ReplyKeyboardRemove
    import asyncio
    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–µ—Ä–∞–∑—Ä—ã–≤–Ω—ã–π –ø—Ä–æ–±–µ–ª –∏ —Å—Ä–∞–∑—É —É–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        tmp = await message.answer("\u00A0", reply_markup=ReplyKeyboardRemove())
        # –î–∞–µ–º –∫–ª–∏–µ–Ω—Ç—É –≤—Ä–µ–º—è –ø—Ä–∏–º–µ–Ω–∏—Ç—å —É–¥–∞–ª–µ–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
        await asyncio.sleep(0.4)
        try:
            await message.bot.delete_message(chat_id=tmp.chat.id, message_id=tmp.message_id)
        except Exception:
            # –ï—Å–ª–∏ —É–¥–∞–ª–µ–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å ‚Äî –ø—Ä–æ—Å—Ç–æ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º, —ç—Ç–æ –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ
            pass
    except Exception:
        # –ï—Å–ª–∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞–µ–º, —á—Ç–æ–±—ã –Ω–µ –ª–æ–º–∞—Ç—å –ø–æ—Ç–æ–∫
        pass


async def disable_buttons_by_id(bot, chat_id: int, message_id: int) -> None:
    """–û—Ç–∫–ª—é—á–∞–µ—Ç –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏ —É —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ id."""
    try:
        await bot.edit_message_reply_markup(chat_id=chat_id, message_id=message_id, reply_markup=get_disabled_buttons_markup())
    except Exception:
        # –°–æ–æ–±—â–µ–Ω–∏–µ —É–∂–µ –∏–∑–º–µ–Ω–µ–Ω–æ/—É–¥–∞–ª–µ–Ω–æ ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
        pass
