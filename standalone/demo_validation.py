#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä–æ–µ –¥–µ–º–æ —Å–∏—Å—Ç–µ–º—ã –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–º–∏ –ø—Ä–∏–º–µ—Ä–∞–º–∏.
–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç, –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤–∞–ª–∏–¥–∞—Ü–∏—è –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏.
"""

import sys
import time
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞ –≤ PATH
project_root = Path(__file__).parent
sys.path.insert(0, str(project_root))

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∞–≤—Ç–æ–Ω–æ–º–Ω—ã–π –≤–∞–ª–∏–¥–∞—Ç–æ—Ä
from standalone_validation_test import StandaloneValidator, ValidationError


def print_header():
    """–í—ã–≤–æ–¥–∏—Ç –∑–∞–≥–æ–ª–æ–≤–æ–∫ –¥–µ–º–æ"""
    print("üé¨ –î–ï–ú–û: –°–∏—Å—Ç–µ–º–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö")
    print("=" * 55)
    print("üí° –ë–µ–∑–æ–ø–∞—Å–Ω–æ - –Ω–∏–∫–∞–∫–∏—Ö API –∑–∞–ø—Ä–æ—Å–æ–≤!")
    print("üéØ –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ä–µ–∞–ª—å–Ω—É—é —Ä–∞–±–æ—Ç—É –≤–∞–ª–∏–¥–∞—Ü–∏–∏")
    print("=" * 55)
    print()


def demo_text_validation():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –≤–∞–ª–∏–¥–∞—Ü–∏—é —Ç–µ–∫—Å—Ç–∞"""
    validator = StandaloneValidator()
    
    print("üìù –î–ï–ú–û: –í–∞–ª–∏–¥–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π")
    print("-" * 40)
    
    test_texts = [
        ("‚úÖ –ù–æ—Ä–º–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç", "–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞? –•–æ—á—É –ø—Ä–æ–π—Ç–∏ –æ–±—É—á–µ–Ω–∏–µ."),
        ("‚ùå –ü—É—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ", ""),
        ("‚ùå –°–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ", "–ê" * 100 + "... (–ø—Ä–µ–¥—Å—Ç–∞–≤—å—Ç–µ –∑–¥–µ—Å—å 4000+ —Å–∏–º–≤–æ–ª–æ–≤)"),
        ("‚ùå –°–ø–∞–º", "–∞–∞–∞–∞–∞–∞–∞–∞–∞–∞–∞–∞–∞–∞–∞–∞–∞–∞–∞–∞–∞–∞–∞–∞–∞–∞–∞–∞–∞–∞–∞–∞–∞–∞–∞–∞–∞–∞–∞–∞–∞–∞–∞–∞–∞–∞–∞–∞–∞–∞–∞–∞–∞–∞–∞"),
        ("‚úÖ –° —ç–º–æ–¥–∑–∏", "–û—Ç–ª–∏—á–Ω–æ! üòä –ñ–¥—É –æ—Ç–≤–µ—Ç–∞! üöÄ"),
        ("‚ùå –ú–Ω–æ–≥–æ —Å—Ç—Ä–æ–∫", "\n".join([f"–°—Ç—Ä–æ–∫–∞ {i}" for i in range(15)]) + "\n... (–ø—Ä–µ–¥—Å—Ç–∞–≤—å—Ç–µ 50+ —Å—Ç—Ä–æ–∫)"),
    ]
    
    for status, text in test_texts:
        print(f"\n{status} –¢–µ—Å—Ç–∏—Ä—É–µ–º: '{text[:50]}{'...' if len(text) > 50 else ''}'")
        
        try:
            result = validator.validate_text(text)
            print(f"   ‚úÖ –ü—Ä–∏–Ω—è—Ç–æ: '{result[:40]}{'...' if len(result) > 40 else ''}'")
            print(f"   üìè –î–ª–∏–Ω–∞: {len(result)} —Å–∏–º–≤–æ–ª–æ–≤, —Å—Ç—Ä–æ–∫: {len(result.split(chr(10)))}")
        except ValidationError as e:
            print(f"   ‚ùå –û—Ç–∫–ª–æ–Ω–µ–Ω–æ: {e.message}")
        
        time.sleep(0.5)  # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –¥–ª—è —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏


def demo_voice_validation():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –≤–∞–ª–∏–¥–∞—Ü–∏—é –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤"""
    validator = StandaloneValidator()
    
    print("\n\nüé§ –î–ï–ú–û: –í–∞–ª–∏–¥–∞—Ü–∏—è –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π")
    print("-" * 40)
    
    test_voices = [
        ("‚úÖ –ù–æ—Ä–º–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª", 1.5 * 1024 * 1024, 30.0),  # 1.5MB, 30 —Å–µ–∫
        ("‚úÖ –ö–æ—Ä–æ—Ç–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ", 0.5 * 1024 * 1024, 5.0),  # 0.5MB, 5 —Å–µ–∫
        ("‚ùå –°–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π", 30 * 1024 * 1024, 60.0),  # 30MB, 60 —Å–µ–∫  
        ("‚ùå –°–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ", 2 * 1024 * 1024, 400.0),  # 2MB, 400 —Å–µ–∫
        ("‚ùå –°–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–æ–µ", 1024, 0.1),  # 1KB, 0.1 —Å–µ–∫
        ("‚úÖ –ì—Ä–∞–Ω–∏—á–Ω—ã–π —Å–ª—É—á–∞–π", 25 * 1024 * 1024, 300.0),  # 25MB, 300 —Å–µ–∫
    ]
    
    for status, size_bytes, duration in test_voices:
        size_mb = size_bytes / (1024 * 1024)
        print(f"\n{status} –§–∞–π–ª: {size_mb:.1f}–ú–ë, {duration}—Å–µ–∫")
        
        try:
            validator.validate_voice_file(int(size_bytes), duration)
            print(f"   ‚úÖ –ü—Ä–∏–Ω—è—Ç: —Ä–∞–∑–º–µ—Ä –∏ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –Ω–æ—Ä–º—ã")
        except ValidationError as e:
            print(f"   ‚ùå –û—Ç–∫–ª–æ–Ω—ë–Ω: {e.message}")
        
        time.sleep(0.3)


def demo_rate_limiting():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç —Ä–∞–±–æ—Ç—É rate limiting"""
    validator = StandaloneValidator()
    
    print("\n\n‚è∞ –î–ï–ú–û: Rate Limiting (–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —á–∞—Å—Ç–æ—Ç—ã –∑–∞–ø—Ä–æ—Å–æ–≤)")
    print("-" * 40)
    
    user_id = 12345
    print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –º–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–¥—Ä—è–¥...")
    print(f"üìä –õ–∏–º–∏—Ç: {validator.settings.MAX_REQUESTS_PER_MINUTE} –∑–∞–ø—Ä–æ—Å–æ–≤/–º–∏–Ω—É—Ç—É")
    
    for i in range(validator.settings.MAX_REQUESTS_PER_MINUTE + 3):
        try:
            validator._check_rate_limit(user_id)
            if i < 5 or i % 5 == 0:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5 –∏ –∫–∞–∂–¥—ã–π 5-–π
                print(f"   ‚úÖ –ó–∞–ø—Ä–æ—Å {i+1}: —Ä–∞–∑—Ä–µ—à—ë–Ω")
        except ValidationError as e:
            print(f"   ‚ùå –ó–∞–ø—Ä–æ—Å {i+1}: –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω - {e.message}")
            break
        
        if i == 4:
            print("   ... (–ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã)")
    
    print("üí° Rate limiting –∑–∞—â–∏—â–∞–µ—Ç –æ—Ç —Å–ø–∞–º–∞ –∏ –∑–ª–æ—É–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–π!")


def demo_transcription():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –≤–∞–ª–∏–¥–∞—Ü–∏—é —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏–∏"""
    validator = StandaloneValidator()
    
    print("\n\nüìú –î–ï–ú–û: –í–∞–ª–∏–¥–∞—Ü–∏—è —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞")
    print("-" * 40)
    print("üí° –î–ª—è —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏–∏ –æ—Ç–∫–ª—é—á–µ–Ω—ã –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞ —Å–ø–∞–º")
    
    test_transcriptions = [
        ("‚úÖ –ß–∏—Å—Ç–∞—è —Ä–µ—á—å", "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à —Å–µ—Ä–≤–∏—Å –æ–±—É—á–µ–Ω–∏—è"),
        ("‚úÖ –° –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞–º–∏", "—ç—ç—ç... –Ω—É... –≤ –æ–±—â–µ–º... —Ö–æ—á—É... —Ç–∏–ø–∞... —É–∑–Ω–∞—Ç—å"),
        ("‚úÖ –ù–µ—Ñ–æ—Ä–º–∞–ª—å–Ω–∞—è", "–∞–≥–∞, –ø–æ–Ω—è–ª, —Å–ø–∞—Å–∏–±–æ, –±—É–¥—É –¥–µ–ª–∞—Ç—å"),
        ("‚ùå –ü—É—Å—Ç–∞—è", ""),
        ("‚ùå –°–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–∞—è", "—Å–ª–æ–≤–æ " * 1000 + "... (–ø—Ä–µ–¥—Å—Ç–∞–≤—å—Ç–µ 4000+ —Å–∏–º–≤–æ–ª–æ–≤)"),
    ]
    
    for status, text in test_transcriptions:
        print(f"\n{status} –¢—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏—è: '{text[:50]}{'...' if len(text) > 50 else ''}'")
        
        try:
            result = validator.validate_transcribed_text(text)
            print(f"   ‚úÖ –ü—Ä–∏–Ω—è—Ç–∞: '{result[:40]}{'...' if len(result) > 40 else ''}'")
        except ValidationError as e:
            print(f"   ‚ùå –û—Ç–∫–ª–æ–Ω–µ–Ω–∞: {e.message}")
        
        time.sleep(0.4)


def demo_real_scenarios():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç —Ä–µ–∞–ª—å–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è"""
    validator = StandaloneValidator()
    
    print("\n\nüé≠ –î–ï–ú–û: –†–µ–∞–ª—å–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è")
    print("-" * 40)
    
    scenarios = [
        ("–û–±—ã—á–Ω—ã–π –¥–∏–∞–ª–æ–≥", "–ü—Ä–∏–≤–µ—Ç! –Ø —Ö–æ—á—É –ø—Ä–æ–π—Ç–∏ –∫—É—Ä—Å –ø–æ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏."),
        ("–î–ª–∏–Ω–Ω—ã–π –≤–æ–ø—Ä–æ—Å", "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ü–æ–¥—Å–∫–∞–∂–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∫–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –¥–∞–≤–∞—Ç—å –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å –∫–æ–ª–ª–µ–≥–∞–º? –£ –º–µ–Ω—è —á–∞—Å—Ç–æ –≤–æ–∑–Ω–∏–∫–∞—é—Ç —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –≤ –æ–±—â–µ–Ω–∏–∏, –æ—Å–æ–±–µ–Ω–Ω–æ –∫–æ–≥–¥–∞ –Ω—É–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –Ω–∞ –æ—à–∏–±–∫–∏. –•–æ—á–µ—Ç—Å—è –¥–µ–ª–∞—Ç—å —ç—Ç–æ –¥–µ–ª–∏–∫–∞—Ç–Ω–æ, –Ω–æ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ."),
        ("–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ", "–û—á–µ–Ω—å —Ä–∞—Å—Å—Ç—Ä–æ–µ–Ω! üò¢ –ö–æ–ª–ª–µ–≥–∞ –æ–ø—è—Ç—å –Ω–µ –≤—ã–ø–æ–ª–Ω–∏–ª –∑–∞–¥–∞—á—É –≤–æ–≤—Ä–µ–º—è! –ö–∞–∫ —Å —ç—Ç–∏–º —Ä–∞–±–æ—Ç–∞—Ç—å?"),
        ("–ü–æ–ø—ã—Ç–∫–∞ —Å–ø–∞–º–∞", "–ö—É–ø–∏—Ç–µ –Ω–∞—à–∏ —É—Å–ª—É–≥–∏!!! –õ—É—á—à–∏–µ —Ü–µ–Ω—ã!!! –ó–≤–æ–Ω–∏—Ç–µ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å!!!!!!!!!!!!!!!!!!!!!!!!"),
        ("–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞", "   "),  # —Ç–æ–ª—å–∫–æ –ø—Ä–æ–±–µ–ª—ã
    ]
    
    for scenario_name, text in scenarios:
        print(f"\nüé¨ –°—Ü–µ–Ω–∞—Ä–∏–π: {scenario_name}")
        print(f"   üìù –°–æ–æ–±—â–µ–Ω–∏–µ: '{text[:60]}{'...' if len(text) > 60 else ''}'")
        
        try:
            result = validator.validate_text(text)
            print(f"   ‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞: —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏–Ω—è—Ç–æ –∏ –±—É–¥–µ—Ç –ø–µ—Ä–µ–¥–∞–Ω–æ –≤ AI")
            print(f"   üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: {len(result)} —Å–∏–º–≤–æ–ª–æ–≤, {len(result.split())} —Å–ª–æ–≤")
        except ValidationError as e:
            print(f"   ‚ùå –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞: {e.message}")
            print(f"   üí° –†–µ–∑—É–ª—å—Ç–∞—Ç: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–∏—Ç –ø–æ–Ω—è—Ç–Ω–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ")
        
        time.sleep(0.6)


def print_summary():
    """–í—ã–≤–æ–¥–∏—Ç –∏—Ç–æ–≥–æ–≤—É—é —Å–≤–æ–¥–∫—É –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π"""
    print("\n\nüìã –ò–¢–û–ì–ò –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–ò")
    print("=" * 55)
    print("‚úÖ –°–∏—Å—Ç–µ–º–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —É—Å–ø–µ—à–Ω–æ:")
    print("   ‚Ä¢ –ü—Ä–∏–Ω–∏–º–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ª—é–±–æ–π –¥–ª–∏–Ω—ã (–¥–æ –ª–∏–º–∏—Ç–∞)")
    print("   ‚Ä¢ –ë–ª–æ–∫–∏—Ä—É–µ—Ç —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π –∏–ª–∏ –ø—É—Å—Ç–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç")
    print("   ‚Ä¢ –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –∏ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–ø–∞–º")
    print("   ‚Ä¢ –ö–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ—Ç —Ä–∞–∑–º–µ—Ä –∏ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤")
    print("   ‚Ä¢ –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ—Ç —á–∞—Å—Ç–æ—Ç—É –∑–∞–ø—Ä–æ—Å–æ–≤ (rate limiting)")
    print("   ‚Ä¢ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏—é —Å –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞–º–∏")
    print("   ‚Ä¢ –î–∞—ë—Ç –ø–æ–Ω—è—Ç–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–∞—Ö –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ")
    print()
    print("üõ°Ô∏è –ó–∞—â–∏—Ç–∞ LLM:")
    print("   ‚Ä¢ –≠–∫–æ–Ω–æ–º–∏—Ç —Ç–æ–∫–µ–Ω—ã, –±–ª–æ–∫–∏—Ä—É—è –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç")
    print("   ‚Ä¢ –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç –¥–æ—Ä–æ–≥–∏–µ –∑–∞–ø—Ä–æ—Å—ã —Å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏")
    print("   ‚Ä¢ –ó–∞—â–∏—â–∞–µ—Ç –æ—Ç –∑–ª–æ—É–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–π –∏ —Å–ø–∞–º–∞")
    print()
    print("üí° –ì–æ—Ç–æ–≤–æ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ!")
    print("   ‚Ä¢ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º—ã–µ –ª–∏–º–∏—Ç—ã —á–µ—Ä–µ–∑ .env")
    print("   ‚Ä¢ –ú–µ—Ç—Ä–∏–∫–∏ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞")
    print("   ‚Ä¢ –ú–Ω–æ–≥–æ—É—Ä–æ–≤–Ω–µ–≤–∞—è –∑–∞—â–∏—Ç–∞ (handlers ‚Üí gateway ‚Üí LLM)")


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–µ–º–æ"""
    print_header()
    
    try:
        demo_text_validation()
        demo_voice_validation()
        demo_rate_limiting()
        demo_transcription()
        demo_real_scenarios()
        print_summary()
        
        print("\nüéâ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        print("üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ 'python standalone_validation_test.py' –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
        
    except KeyboardInterrupt:
        print("\n\nüëã –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"\nüí• –û—à–∏–±–∫–∞ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏: {e}")
        return 1
    
    return 0


if __name__ == "__main__":
    sys.exit(main())
