"""
–¢–µ—Å—Ç—ã –¥–ª—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä —Ä–µ–π—Ç–∏–Ω–≥–æ–≤.

–¢–µ—Å—Ç–∏—Ä—É–µ–º—ã–π –º–æ–¥—É–ª—å:
- app/keyboards/ratings.py

–¢–µ—Å—Ç–∏—Ä—É–µ–º—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã:
- rating_scale_inline —Ñ—É–Ω–∫—Ü–∏—è
- rating_open_inline —Ñ—É–Ω–∫—Ü–∏—è
- rating_comment_inline —Ñ—É–Ω–∫—Ü–∏—è
"""

import pytest
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

from app.keyboards.ratings import (
    rating_scale_inline,
    rating_open_inline,
    rating_comment_inline,
    CALLBACK_RATE_PREFIX,
)


class TestRatingScaleInline:
    """–¢–µ—Å—Ç—ã –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–∏ rating_scale_inline"""

    def test_rating_scale_inline_structure(self):
        """–¢–µ—Å—Ç: —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å 10 –∫–Ω–æ–ø–∫–∞–º–∏"""
        question_key = "test_question"
        keyboard = rating_scale_inline(question_key)
        
        assert isinstance(keyboard, InlineKeyboardMarkup)
        assert len(keyboard.inline_keyboard) == 3  # 2 —Ä—è–¥–∞ –ø–æ 5 –∫–Ω–æ–ø–æ–∫ + –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–≤—ã–π —Ä—è–¥ (–∫–Ω–æ–ø–∫–∏ 1-5)
        first_row = keyboard.inline_keyboard[0]
        assert len(first_row) == 5
        for i, button in enumerate(first_row, start=1):
            assert isinstance(button, InlineKeyboardButton)
            assert button.text == str(i)
            assert button.callback_data == f"{CALLBACK_RATE_PREFIX}set:{question_key}:{i}"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Ç–æ—Ä–æ–π —Ä—è–¥ (–∫–Ω–æ–ø–∫–∏ 6-10 vulns)
        second_row = keyboard.inline_keyboard[1]
        assert len(second_row) == 5
        for i, button in enumerate(second_row, start=6):
            assert isinstance(button, InlineKeyboardButton)
            assert button.text == str(i)
            assert button.callback_data == f"{CALLBACK_RATE_PREFIX}set:{question_key}:{i}"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–Ω–æ–ø–∫—É –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
        menu_row = keyboard.inline_keyboard[2]
        assert len(menu_row) == 1
        assert menu_row[0].text == "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
        assert menu_row[0].callback_data == "nav:menu"

    def test_rating_scale_inline_different_question_key(self):
        """–¢–µ—Å—Ç: —Ä–∞–∑–Ω—ã–µ question_key –≥–µ–Ω–µ—Ä–∏—Ä—É—é—Ç —Ä–∞–∑–Ω—ã–µ callback_data"""
        keyboard1 = rating_scale_inline("question1")
        keyboard2 = rating_scale_inline("question2")
        
        assert keyboard1.inline_keyboard[0][0].callback_data != keyboard2.inline_keyboard[0][0].callback_data
        assert "question1" in keyboard1.inline_keyboard[0][0].callback_data
        assert "question2" in keyboard2.inline_keyboard[0][0].callback_data


class TestRatingOpenInline:
    """–¢–µ—Å—Ç—ã –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–∏ rating_open_inline"""

    def test_rating_open_inline_structure(self):
        """–¢–µ—Å—Ç: —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –Ω–∞—á–∞–ª–∞ –æ—Ü–µ–Ω–∫–∏"""
        keyboard = rating_open_inline()
        
        assert isinstance(keyboard, InlineKeyboardMarkup)
        assert len(keyboard.inline_keyboard) == 1
        
        row = keyboard.inline_keyboard[0]
        assert len(row) == 1
        
        button = row[0]
        assert isinstance(button, InlineKeyboardButton)
        assert button.text == "–ù–∞—á–∞—Ç—å –æ—Ü–µ–Ω–∫—É ‚≠ê"
        assert button.callback_data == f"{CALLBACK_RATE_PREFIX}open"


class TestRatingCommentInline:
    """–¢–µ—Å—Ç—ã –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–∏ rating_comment_inline"""

    def test_rating_comment_inline_structure(self):
        """–¢–µ—Å—Ç: —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è"""
        keyboard = rating_comment_inline()
        
        assert isinstance(keyboard, InlineKeyboardMarkup)
        assert len(keyboard.inline_keyboard) == 2
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–Ω–æ–ø–∫—É "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å"
        skip_row = keyboard.inline_keyboard[0]
        assert len(skip_row) == 1
        assert skip_row[0].text == "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å"
        assert skip_row[0].callback_data == f"{CALLBACK_RATE_PREFIX}comment:skip"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–Ω–æ–ø–∫—É –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
        menu_row = keyboard.inline_keyboard[1]
        assert len(menu_row) == 1
        assert menu_row[0].text == "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
        assert menu_row[0].callback_data == "nav:menu"


class TestRatingCallbacks:
    """–¢–µ—Å—Ç—ã –¥–ª—è –∫–æ–Ω—Å—Ç–∞–Ω—Ç –∏ callback —Å—Ç—Ä—É–∫—Ç—É—Ä—ã"""

    def test_callback_rate_prefix(self):
        """–¢–µ—Å—Ç: –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø—Ä–µ—Ñ–∏–∫—Å –¥–ª—è callbacks —Ä–µ–π—Ç–∏–Ω–≥–∞"""
        assert CALLBACK_RATE_PREFIX == "rate:"
        
        keyboard = rating_open_inline()
        assert keyboard.inline_keyboard[0][0].callback_data.startswith(CALLBACK_RATE_PREFIX)

